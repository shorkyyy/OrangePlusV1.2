import type { EasingFn } from '../../Easing';
import type { KeyframeProps } from './commonTypes';
import type { StyleProps } from '../../commonTypes';
export interface KeyframePoint {
    duration: number;
    value: number | string;
    easing?: EasingFn;
}
export interface ParsedKeyframesDefinition {
    initialValues: StyleProps;
    keyframes: Record<string, KeyframePoint[]>;
}
export declare class ReanimatedKeyframe {
    constructor(definitions: Record<string, KeyframeProps>);
    duration(durationMs: number): ReanimatedKeyframe;
    delay(delayMs: number): ReanimatedKeyframe;
    withCallback(callback: (finished: boolean) => void): ReanimatedKeyframe;
}
export declare const Keyframe: typeof ReanimatedKeyframe;
