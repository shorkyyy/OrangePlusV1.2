{"version":3,"names":["useRef","useSharedValue","getShadowNodeWrapperFromRef","makeShareableCloneRecursive","registerShareableMapping","findNodeHandle","getComponentOrScrollableRef","component","global","_IS_FABRIC","getNativeScrollRef","getScrollableNode","getTagValueFunction","useAnimatedRef","tag","ref","current","fun","value","remoteRef","__init"],"sources":["useAnimatedRef.ts"],"sourcesContent":["import type { Component } from 'react';\nimport { useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedRef, RefObjectFunction } from './commonTypes';\nimport type { ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport {\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from '../shareables';\nimport { findNodeHandle } from 'react-native';\n\ninterface ComponentRef extends Component {\n  getNativeScrollRef?: () => ComponentRef;\n  getScrollableNode?: () => ComponentRef;\n}\n\nfunction getComponentOrScrollableRef(component: ComponentRef): ComponentRef {\n  if (global._IS_FABRIC && component.getNativeScrollRef) {\n    return component.getNativeScrollRef();\n  } else if (!global._IS_FABRIC && component.getScrollableNode) {\n    return component.getScrollableNode();\n  }\n  return component;\n}\n\nconst getTagValueFunction = global._IS_FABRIC\n  ? getShadowNodeWrapperFromRef\n  : findNodeHandle;\n\nexport function useAnimatedRef<T extends ComponentRef>(): AnimatedRef<T> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const ref = useRef<RefObjectFunction<T>>();\n\n  if (!ref.current) {\n    const fun: RefObjectFunction<T> = <RefObjectFunction<T>>((component) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        tag.value = getTagValueFunction(getComponentOrScrollableRef(component));\n        fun.current = component;\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const remoteRef = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        return () => tag.value;\n      },\n    });\n    registerShareableMapping(fun, remoteRef);\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n"],"mappings":"AACA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,cAAc,QAAQ,kBAAkB;AAGjD,SAASC,2BAA2B,QAAQ,gBAAgB;AAC5D,SACEC,2BAA2B,EAC3BC,wBAAwB,QACnB,eAAe;AACtB,SAASC,cAAc,QAAQ,cAAc;AAO7C,SAASC,2BAA2BA,CAACC,SAAuB,EAAgB;EAC1E,IAAIC,MAAM,CAACC,UAAU,IAAIF,SAAS,CAACG,kBAAkB,EAAE;IACrD,OAAOH,SAAS,CAACG,kBAAkB,EAAE;EACvC,CAAC,MAAM,IAAI,CAACF,MAAM,CAACC,UAAU,IAAIF,SAAS,CAACI,iBAAiB,EAAE;IAC5D,OAAOJ,SAAS,CAACI,iBAAiB,EAAE;EACtC;EACA,OAAOJ,SAAS;AAClB;AAEA,MAAMK,mBAAmB,GAAGJ,MAAM,CAACC,UAAU,GACzCP,2BAA2B,GAC3BG,cAAc;AAElB,OAAO,SAASQ,cAAcA,CAAA,EAA2C;EACvE,MAAMC,GAAG,GAAGb,cAAc,CAAoC,CAAC,CAAC,CAAC;EACjE,MAAMc,GAAG,GAAGf,MAAM,EAAwB;EAE1C,IAAI,CAACe,GAAG,CAACC,OAAO,EAAE;IAChB,MAAMC,GAAyB,GAA2BV,SAAS,IAAK;MACtE;MACA,IAAIA,SAAS,EAAE;QACbO,GAAG,CAACI,KAAK,GAAGN,mBAAmB,CAACN,2BAA2B,CAACC,SAAS,CAAC,CAAC;QACvEU,GAAG,CAACD,OAAO,GAAGT,SAAS;MACzB;MACA,OAAOO,GAAG,CAACI,KAAK;IAClB,CAAE;IAEFD,GAAG,CAACD,OAAO,GAAG,IAAI;IAElB,MAAMG,SAAS,GAAGhB,2BAA2B,CAAC;MAC5CiB,MAAM,EAAEA,CAAA,KAAM;QACZ,SAAS;;QACT,OAAO,MAAMN,GAAG,CAACI,KAAK;MACxB;IACF,CAAC,CAAC;IACFd,wBAAwB,CAACa,GAAG,EAAEE,SAAS,CAAC;IACxCJ,GAAG,CAACC,OAAO,GAAGC,GAAG;EACnB;EAEA,OAAOF,GAAG,CAACC,OAAO;AACpB"}