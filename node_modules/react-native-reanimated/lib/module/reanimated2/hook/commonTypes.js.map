{"version":3,"names":[],"sources":["commonTypes.ts"],"sourcesContent":["import type { Context, ShadowNodeWrapper } from '../commonTypes';\n\nexport type DependencyList = Array<unknown> | undefined;\n\nexport interface ContextWithDependencies<TContext extends Context> {\n  context: TContext;\n  savedDependencies: DependencyList;\n}\n\nexport interface Descriptor {\n  tag: number;\n  name: string;\n  shadowNodeWrapper: ShadowNodeWrapper;\n}\n\nexport interface RefObjectFunction<T> {\n  current: T | null;\n  (component?: T):\n    | number // Paper\n    | ShadowNodeWrapper // Fabric\n    | HTMLElement; // web\n}\n\nexport type AnimatedRef<T> = RefObjectFunction<T>;\n"],"mappings":""}